import requests
import re

result = requests.get('http://cbr.ru')
html = result.text

match = re.search(r'Евро\D+(\d+,\d+)', html)  # Ищем Евро, пропускаем всё, что не число 1 и более раз (+)
                                 # () - группа, ищем число, запятую, число
rate = match.group(1)
print(rate)

# \d - цифра 0-9
# \D - что угодно, кроме цифр
# . - любой символ, кроме перевода строки \n
# + - 1 и более раз, * - 0 и более раз, ? - 0 или 1 раз
# *? - не жадничать: a.*c = ABCDABCd; a.*?c = ABCdABCd
# () - сгруппировать и запомнить. Можно и так (a(b)c(d))

html = "Курс евро на сегодня 68.554, курс евро на завтра 66.229"
match = re.search(r'евро\D+(\d+,\d+)', html, re.IGNORECASE)
rate = match.group(1)
print(rate)

# Чцвствительность к регистру - ничего не нашлось
match = re.search(r'евро\D+(\d+,\d+)', html)
print(match is None)

# Жадность - .* захватила максимум, поэтому найдётся только одна цифоп реоед запятой и остаток второго курса
print(re.search(r'Евро.*(\d+,\d+)', html, re.IGNORECASE).group(1))

# Нежадность - найдётся просто первый курс
print(re.search(r'Евро.*?(\d+,\d+)', html, re.IGNORECASE).group(1))

# Найдётся вся строка, попадающая под регулярку, потому что нет групп
print(re.findall(r'Евро\D+\d+,\d+', html, re.IGNORECASE))

# Есть группы, поэтому вернутся по отдельности числа перед запятыми и после
print(re.findall(r'Евро\D+(\d+),(\d+)', html, re.IGNORECASE))

# Есть вложенные группы. Вернутся оба курса и числа перед запятыми и после
print(re.findall(r'Евро\D+((\d+),(\d+))', html, re.IGNORECASE))

# Усложним строку
html = """
Курс евро на сегодня (15 января)
составляет 68,7541"""

# Флаг DOTALL переключает регулярку в режим, когда точка - любой символ (даже перевод строки, что нам и нужно)
print(re.search(r'Евро.*?(\d+,\d+)', html, re.IGNORECASE | re.DOTALL).group(1))

# Символьный класс [abc123] [1-6] - один символ из множества
# обратный класс \D = [^\d] = [^0-9]

# Квантификаторы ab{1,5}c - b от 1 до 5 раз
# Любую границу можно опускать (, надо оставлять)
# Точный кванитифмкатор (, надо убирать)

# Найдём все автомобильные номера в тексте
text = '''
Автомобиль с номером А123ВС77 подрезал автомобиль
К654НЕ197. Вот
'''

pattern = r'[АВЕКМНОРСТУХ]\d{3}[АВЕКМНОРСТУХ]{2}\d{2,3}'
print(re.findall(pattern, text))

# Спец символьные классы
# \w = [a-zA-Z_0-9] - буква, цифра или _
# \W = [^\w]
# \s = пробел [\f\n\r\t\v]
# \S = не пробел
# \B = позиция внутри слова
# ^ = начало строки, $ = конец строки

nicknames = ['sU3r_h4XX0r', 'alёna', 'ivan ivanovich']
reg = re.compile(r'^\w+$', re.ASCII)  # с начала до конца буквы и цифры только без ё
for nick in nicknames:
    print('{} nick: "{}"'.format(
        'valid' if reg.match(nick) else 'invalid',
        nick
    ))